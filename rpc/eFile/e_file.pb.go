// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: e_file.proto

package eFile

import (
	base "github.com/nerdynz/skeleton/rpc/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // @gotags: db:"name"
	Size         int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                                    // @gotags: db:"size"
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                     // @gotags: db:"type"
	Path         string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`                                     // @gotags: db:"path"
	DateCreated  string `protobuf:"bytes,5,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`    // @gotags: db:"date_created"
	DateModified string `protobuf:"bytes,6,opt,name=date_modified,json=dateModified,proto3" json:"date_modified,omitempty"` // @gotags: db:"date_modified"
	SiteUlid     string `protobuf:"bytes,7,opt,name=site_ulid,json=siteUlid,proto3" json:"site_ulid,omitempty"`             // @gotags: db:"site_ulid"
	Group        string `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`                                   // @gotags: db:"group"
	Ulid         string `protobuf:"bytes,9,opt,name=ulid,proto3" json:"ulid,omitempty"`                                     // @gotags: db:"ulid"
}

func (x *EFile) Reset() {
	*x = EFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EFile) ProtoMessage() {}

func (x *EFile) ProtoReflect() protoreflect.Message {
	mi := &file_e_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EFile.ProtoReflect.Descriptor instead.
func (*EFile) Descriptor() ([]byte, []int) {
	return file_e_file_proto_rawDescGZIP(), []int{0}
}

func (x *EFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *EFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EFile) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *EFile) GetDateModified() string {
	if x != nil {
		return x.DateModified
	}
	return ""
}

func (x *EFile) GetSiteUlid() string {
	if x != nil {
		return x.SiteUlid
	}
	return ""
}

func (x *EFile) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EFile) GetUlid() string {
	if x != nil {
		return x.Ulid
	}
	return ""
}

type EFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EFiles []*EFile `protobuf:"bytes,1,rep,name=eFiles,proto3" json:"eFiles,omitempty"`
}

func (x *EFiles) Reset() {
	*x = EFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EFiles) ProtoMessage() {}

func (x *EFiles) ProtoReflect() protoreflect.Message {
	mi := &file_e_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EFiles.ProtoReflect.Descriptor instead.
func (*EFiles) Descriptor() ([]byte, []int) {
	return file_e_file_proto_rawDescGZIP(), []int{1}
}

func (x *EFiles) GetEFiles() []*EFile {
	if x != nil {
		return x.EFiles
	}
	return nil
}

type EFilesPaged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagedInfo *base.PagedInfo `protobuf:"bytes,1,opt,name=pagedInfo,proto3" json:"pagedInfo,omitempty"`
	Records   []*EFile        `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *EFilesPaged) Reset() {
	*x = EFilesPaged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EFilesPaged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EFilesPaged) ProtoMessage() {}

func (x *EFilesPaged) ProtoReflect() protoreflect.Message {
	mi := &file_e_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EFilesPaged.ProtoReflect.Descriptor instead.
func (*EFilesPaged) Descriptor() ([]byte, []int) {
	return file_e_file_proto_rawDescGZIP(), []int{2}
}

func (x *EFilesPaged) GetPagedInfo() *base.PagedInfo {
	if x != nil {
		return x.PagedInfo
	}
	return nil
}

func (x *EFilesPaged) GetRecords() []*EFile {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_e_file_proto protoreflect.FileDescriptor

var file_e_file_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x05, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75,
	0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x55,
	0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6c, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6c, 0x69, 0x64, 0x22, 0x31, 0x0a,
	0x06, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x6b, 0x0a, 0x0b, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x45,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0xd8, 0x01,
	0x0a, 0x08, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x50, 0x43, 0x12, 0x2e, 0x0a, 0x09, 0x4c, 0x6f,
	0x61, 0x64, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x1a, 0x0f, 0x2e, 0x73, 0x6b, 0x65, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x61,
	0x76, 0x65, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65,
	0x74, 0x6f, 0x6e, 0x2e, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65,
	0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e,
	0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x45, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x1a, 0x11, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x72, 0x64, 0x79, 0x6e, 0x7a, 0x2f, 0x73,
	0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e_file_proto_rawDescOnce sync.Once
	file_e_file_proto_rawDescData = file_e_file_proto_rawDesc
)

func file_e_file_proto_rawDescGZIP() []byte {
	file_e_file_proto_rawDescOnce.Do(func() {
		file_e_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_e_file_proto_rawDescData)
	})
	return file_e_file_proto_rawDescData
}

var file_e_file_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_e_file_proto_goTypes = []interface{}{
	(*EFile)(nil),          // 0: skeleton.EFile
	(*EFiles)(nil),         // 1: skeleton.EFiles
	(*EFilesPaged)(nil),    // 2: skeleton.EFilesPaged
	(*base.PagedInfo)(nil), // 3: skeleton.PagedInfo
	(*base.Lookup)(nil),    // 4: skeleton.Lookup
	(*base.Deleted)(nil),   // 5: skeleton.Deleted
}
var file_e_file_proto_depIdxs = []int32{
	0, // 0: skeleton.EFiles.eFiles:type_name -> skeleton.EFile
	3, // 1: skeleton.EFilesPaged.pagedInfo:type_name -> skeleton.PagedInfo
	0, // 2: skeleton.EFilesPaged.records:type_name -> skeleton.EFile
	4, // 3: skeleton.EFileRPC.LoadEFile:input_type -> skeleton.Lookup
	0, // 4: skeleton.EFileRPC.SaveEFile:input_type -> skeleton.EFile
	3, // 5: skeleton.EFileRPC.PagedEFiles:input_type -> skeleton.PagedInfo
	4, // 6: skeleton.EFileRPC.DeleteEFile:input_type -> skeleton.Lookup
	0, // 7: skeleton.EFileRPC.LoadEFile:output_type -> skeleton.EFile
	0, // 8: skeleton.EFileRPC.SaveEFile:output_type -> skeleton.EFile
	2, // 9: skeleton.EFileRPC.PagedEFiles:output_type -> skeleton.EFilesPaged
	5, // 10: skeleton.EFileRPC.DeleteEFile:output_type -> skeleton.Deleted
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_e_file_proto_init() }
func file_e_file_proto_init() {
	if File_e_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EFilesPaged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_e_file_proto_goTypes,
		DependencyIndexes: file_e_file_proto_depIdxs,
		MessageInfos:      file_e_file_proto_msgTypes,
	}.Build()
	File_e_file_proto = out.File
	file_e_file_proto_rawDesc = nil
	file_e_file_proto_goTypes = nil
	file_e_file_proto_depIdxs = nil
}
