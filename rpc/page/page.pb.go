// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: page.proto

package page

import (
	base "github.com/nerdynz/skeleton/rpc/base"
	block "github.com/nerdynz/skeleton/rpc/block"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageUlid     string `protobuf:"bytes,1,opt,name=page_ulid,json=pageUlid,proto3" json:"page_ulid,omitempty" db:"page_ulid"`             // @gotags: db:"page_ulid"
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" db:"title"`                                   // @gotags: db:"title"
	Summary      string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty" db:"summary"`                               // @gotags: db:"summary"
	DateCreated  string `protobuf:"bytes,4,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty" db:"date_created"`    // @gotags: db:"date_created"
	DateModified string `protobuf:"bytes,5,opt,name=date_modified,json=dateModified,proto3" json:"date_modified,omitempty" db:"date_modified"` // @gotags: db:"date_modified"
	SiteUlid     string `protobuf:"bytes,6,opt,name=site_ulid,json=siteUlid,proto3" json:"site_ulid,omitempty" db:"site_ulid"`             // @gotags: db:"site_ulid"
	Slug         string `protobuf:"bytes,7,opt,name=slug,proto3" json:"slug,omitempty" db:"slug"`                                     // @gotags: db:"slug"
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_page_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_page_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_page_proto_rawDescGZIP(), []int{0}
}

func (x *Page) GetPageUlid() string {
	if x != nil {
		return x.PageUlid
	}
	return ""
}

func (x *Page) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Page) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Page) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *Page) GetDateModified() string {
	if x != nil {
		return x.DateModified
	}
	return ""
}

func (x *Page) GetSiteUlid() string {
	if x != nil {
		return x.SiteUlid
	}
	return ""
}

func (x *Page) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type PageWithBlockWithImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageUlid     string                  `protobuf:"bytes,1,opt,name=page_ulid,json=pageUlid,proto3" json:"page_ulid,omitempty"`
	Title        string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summary      string                  `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	DateCreated  string                  `protobuf:"bytes,4,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateModified string                  `protobuf:"bytes,5,opt,name=date_modified,json=dateModified,proto3" json:"date_modified,omitempty"`
	SiteUlid     string                  `protobuf:"bytes,6,opt,name=site_ulid,json=siteUlid,proto3" json:"site_ulid,omitempty"`
	Slug         string                  `protobuf:"bytes,7,opt,name=slug,proto3" json:"slug,omitempty"`
	MainNav      []*NavLink              `protobuf:"bytes,8,rep,name=mainNav,proto3" json:"mainNav,omitempty"`
	Blocks       []*block.BlockWithImage `protobuf:"bytes,9,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *PageWithBlockWithImage) Reset() {
	*x = PageWithBlockWithImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_page_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageWithBlockWithImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageWithBlockWithImage) ProtoMessage() {}

func (x *PageWithBlockWithImage) ProtoReflect() protoreflect.Message {
	mi := &file_page_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageWithBlockWithImage.ProtoReflect.Descriptor instead.
func (*PageWithBlockWithImage) Descriptor() ([]byte, []int) {
	return file_page_proto_rawDescGZIP(), []int{1}
}

func (x *PageWithBlockWithImage) GetPageUlid() string {
	if x != nil {
		return x.PageUlid
	}
	return ""
}

func (x *PageWithBlockWithImage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageWithBlockWithImage) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *PageWithBlockWithImage) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *PageWithBlockWithImage) GetDateModified() string {
	if x != nil {
		return x.DateModified
	}
	return ""
}

func (x *PageWithBlockWithImage) GetSiteUlid() string {
	if x != nil {
		return x.SiteUlid
	}
	return ""
}

func (x *PageWithBlockWithImage) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PageWithBlockWithImage) GetMainNav() []*NavLink {
	if x != nil {
		return x.MainNav
	}
	return nil
}

func (x *PageWithBlockWithImage) GetBlocks() []*block.BlockWithImage {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Pages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages []*Page `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
}

func (x *Pages) Reset() {
	*x = Pages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_page_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pages) ProtoMessage() {}

func (x *Pages) ProtoReflect() protoreflect.Message {
	mi := &file_page_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pages.ProtoReflect.Descriptor instead.
func (*Pages) Descriptor() ([]byte, []int) {
	return file_page_proto_rawDescGZIP(), []int{2}
}

func (x *Pages) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

type NavLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug  string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *NavLink) Reset() {
	*x = NavLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_page_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavLink) ProtoMessage() {}

func (x *NavLink) ProtoReflect() protoreflect.Message {
	mi := &file_page_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavLink.ProtoReflect.Descriptor instead.
func (*NavLink) Descriptor() ([]byte, []int) {
	return file_page_proto_rawDescGZIP(), []int{3}
}

func (x *NavLink) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *NavLink) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PagesPaged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagedInfo *base.PagedInfo `protobuf:"bytes,1,opt,name=pagedInfo,proto3" json:"pagedInfo,omitempty"`
	Records   []*Page         `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *PagesPaged) Reset() {
	*x = PagesPaged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_page_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagesPaged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagesPaged) ProtoMessage() {}

func (x *PagesPaged) ProtoReflect() protoreflect.Message {
	mi := &file_page_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagesPaged.ProtoReflect.Descriptor instead.
func (*PagesPaged) Descriptor() ([]byte, []int) {
	return file_page_proto_rawDescGZIP(), []int{4}
}

func (x *PagesPaged) GetPagedInfo() *base.PagedInfo {
	if x != nil {
		return x.PagedInfo
	}
	return nil
}

func (x *PagesPaged) GetRecords() []*Page {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_page_proto protoreflect.FileDescriptor

var file_page_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x6b,
	0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcc, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0xbd,
	0x02, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12,
	0x2b, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x76, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x76, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x76, 0x12, 0x30, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x2d,
	0x0a, 0x05, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x33, 0x0a,
	0x07, 0x4e, 0x61, 0x76, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x69, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0xe7, 0x02,
	0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x52, 0x50, 0x43, 0x12, 0x2c, 0x0a, 0x08, 0x4c, 0x6f, 0x61,
	0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x1a, 0x20, 0x2e, 0x73, 0x6b, 0x65, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x2e, 0x73, 0x6b, 0x65, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x73, 0x6b, 0x65, 0x6c,
	0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14,
	0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x1a, 0x11, 0x2e, 0x73, 0x6b, 0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x72, 0x64, 0x79, 0x6e, 0x7a, 0x2f, 0x73, 0x6b,
	0x65, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_page_proto_rawDescOnce sync.Once
	file_page_proto_rawDescData = file_page_proto_rawDesc
)

func file_page_proto_rawDescGZIP() []byte {
	file_page_proto_rawDescOnce.Do(func() {
		file_page_proto_rawDescData = protoimpl.X.CompressGZIP(file_page_proto_rawDescData)
	})
	return file_page_proto_rawDescData
}

var file_page_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_page_proto_goTypes = []interface{}{
	(*Page)(nil),                   // 0: skeleton.Page
	(*PageWithBlockWithImage)(nil), // 1: skeleton.PageWithBlockWithImage
	(*Pages)(nil),                  // 2: skeleton.Pages
	(*NavLink)(nil),                // 3: skeleton.NavLink
	(*PagesPaged)(nil),             // 4: skeleton.PagesPaged
	(*block.BlockWithImage)(nil),   // 5: skeleton.BlockWithImage
	(*base.PagedInfo)(nil),         // 6: skeleton.PagedInfo
	(*base.Lookup)(nil),            // 7: skeleton.Lookup
	(*base.Deleted)(nil),           // 8: skeleton.Deleted
}
var file_page_proto_depIdxs = []int32{
	3,  // 0: skeleton.PageWithBlockWithImage.mainNav:type_name -> skeleton.NavLink
	5,  // 1: skeleton.PageWithBlockWithImage.blocks:type_name -> skeleton.BlockWithImage
	0,  // 2: skeleton.Pages.pages:type_name -> skeleton.Page
	6,  // 3: skeleton.PagesPaged.pagedInfo:type_name -> skeleton.PagedInfo
	0,  // 4: skeleton.PagesPaged.records:type_name -> skeleton.Page
	7,  // 5: skeleton.PageRPC.LoadPage:input_type -> skeleton.Lookup
	7,  // 6: skeleton.PageRPC.LoadFullPage:input_type -> skeleton.Lookup
	0,  // 7: skeleton.PageRPC.SavePage:input_type -> skeleton.Page
	1,  // 8: skeleton.PageRPC.SaveFullPage:input_type -> skeleton.PageWithBlockWithImage
	6,  // 9: skeleton.PageRPC.PagedPages:input_type -> skeleton.PagedInfo
	7,  // 10: skeleton.PageRPC.DeletePage:input_type -> skeleton.Lookup
	0,  // 11: skeleton.PageRPC.LoadPage:output_type -> skeleton.Page
	1,  // 12: skeleton.PageRPC.LoadFullPage:output_type -> skeleton.PageWithBlockWithImage
	0,  // 13: skeleton.PageRPC.SavePage:output_type -> skeleton.Page
	1,  // 14: skeleton.PageRPC.SaveFullPage:output_type -> skeleton.PageWithBlockWithImage
	4,  // 15: skeleton.PageRPC.PagedPages:output_type -> skeleton.PagesPaged
	8,  // 16: skeleton.PageRPC.DeletePage:output_type -> skeleton.Deleted
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_page_proto_init() }
func file_page_proto_init() {
	if File_page_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_page_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_page_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageWithBlockWithImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_page_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_page_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_page_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagesPaged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_page_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_page_proto_goTypes,
		DependencyIndexes: file_page_proto_depIdxs,
		MessageInfos:      file_page_proto_msgTypes,
	}.Build()
	File_page_proto = out.File
	file_page_proto_rawDesc = nil
	file_page_proto_goTypes = nil
	file_page_proto_depIdxs = nil
}
