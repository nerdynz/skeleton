import{I as K,L as y,p as O,q as S,S as d,v as _,A as Y,N as b,x as w,P as U,a as j,u as k,y as N,z as C}from"./index-u-YX1lRj.js";var G=(u,h,r)=>typeof u=="function"?u(h,r):u;function B(u,h,r){const s=typeof u=="function"?u:h;r=typeof h=="object"?h:r;const l={...P,...r,commit:(r==null?void 0:r.commit)||P.commit};function v(t,n,A,D){var I;const i=n[y],p=n[O];i.has(s)||i.set(s,{data:S(),isLoading:S(!1),error:S(),to:t,options:l,children:new Set,resetPending(){this.pendingLoad=null,this.pendingTo=null},pendingLoad:null,pendingTo:null,staged:d,stagedError:null,commit:x});const e=i.get(s);if(e.pendingTo===t&&e.pendingLoad)return e.pendingLoad;const{error:a,isLoading:f,data:R}=e,c=n[V],E=l.key||"";let m=d;if(c&&E in c&&(m=c[E],delete c[E]),m!==d)return R.value=m,e.pendingLoad=Promise.resolve();e.pendingTo=t,f.value=!0;const o=C();_([e,n,t]),e.staged=d,e.stagedError=a.value;const L=Promise.resolve(s(t,{signal:(I=t.meta[Y])==null?void 0:I.signal})).then(g=>{e.pendingLoad===L&&(g instanceof b?t.meta[w].push(g):(e.staged=g,e.stagedError=null))}).catch(g=>{if(e.pendingLoad===L&&(e.stagedError=g,!G(l.lazy,t,A)||p))throw g}).finally(()=>{_(o),e.pendingLoad===L&&(f.value=!1,(l.commit==="immediate"||!n[U])&&e.commit(t))});return _(o),e.pendingLoad=L,L}function x(t){if(this.pendingTo===t){this.staged!==d&&(this.data.value=this.staged),this.error.value=this.stagedError,this.staged=d,this.stagedError=this.error.value,this.pendingTo=null,this.to=t;for(const n of this.children)n.commit(t)}}const T=()=>{const t=C(),[n,A,D]=t,i=A||j(),p=D||k(),e=i[y];let a=e.get(s);(!a||n&&a.pendingTo!==p)&&i[N].runWithContext(()=>v(p,i,void 0)),a=e.get(s),n&&(n===a&&console.warn(`👶❌ "${l.key}" has itself as parent. This shouldn't be happening. Please report a bug with a reproduction to https://github.com/posva/unplugin-vue-router/`),n.children.add(a));const{data:f,error:R,isLoading:c}=a,E={data:f,error:R,isLoading:c,reload:(o=i.currentRoute.value)=>i[N].runWithContext(()=>v(o,i)).then(()=>a.commit(o))},m=a.pendingLoad.then(()=>a.staged===d?f.value:a.staged).catch(o=>n?Promise.reject(o):null);return _(t),Object.assign(m,E)};return T[K]=!0,T._={load:v,options:l,getEntry(t){return t[y].get(s)}},T}var P={lazy:!1,server:!0,commit:"after-load"},V=Symbol();export{B as d};
