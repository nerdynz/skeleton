// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: block.proto

package block

import (
	base "github.com/nerdynz/skeleton/rpc/base"
	image "github.com/nerdynz/skeleton/rpc/image"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockUlid        string `protobuf:"bytes,1,opt,name=block_ulid,json=blockUlid,proto3" json:"block_ulid,omitempty" db:"block_ulid"`                        // @gotags: db:"block_ulid"
	Title            string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" db:"title"`                                                 // @gotags: db:"title"
	Kind             string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty" db:"kind"`                                                   // @gotags: db:"kind"
	ContentOneHtml   string `protobuf:"bytes,4,opt,name=content_one_html,json=contentOneHtml,proto3" json:"contentOneHtml,omitempty" db:"content_one_html"`       // @gotags: db:"content_one_html"
	ContentTwoHtml   string `protobuf:"bytes,5,opt,name=content_two_html,json=contentTwoHtml,proto3" json:"contentTwoHtml,omitempty" db:"content_two_html"`       // @gotags: db:"content_two_html"
	ContentThreeHtml string `protobuf:"bytes,6,opt,name=content_three_html,json=contentThreeHtml,proto3" json:"contentThreeHtml,omitempty" db:"content_three_html"` // @gotags: db:"content_three_html"
	ContentFourHtml  string `protobuf:"bytes,7,opt,name=content_four_html,json=contentFourHtml,proto3" json:"contentFourHtml,omitempty" db:"content_four_html"`    // @gotags: db:"content_four_html"
	ImageOneUlid     string `protobuf:"bytes,8,opt,name=image_one_ulid,json=imageOneUlid,proto3" json:"image_one_ulid,omitempty" db:"image_one_ulid"`             // @gotags: db:"image_one_ulid"
	ImageTwoUlid     string `protobuf:"bytes,10,opt,name=image_two_ulid,json=imageTwoUlid,proto3" json:"image_two_ulid,omitempty" db:"image_two_ulid"`            // @gotags: db:"image_two_ulid"
	ImageThreeUlid   string `protobuf:"bytes,12,opt,name=image_three_ulid,json=imageThreeUlid,proto3" json:"image_three_ulid,omitempty" db:"image_three_ulid"`      // @gotags: db:"image_three_ulid"
	ImageFourUlid    string `protobuf:"bytes,14,opt,name=image_four_ulid,json=imageFourUlid,proto3" json:"image_four_ulid,omitempty" db:"image_four_ulid"`         // @gotags: db:"image_four_ulid"
	DateCreated      string `protobuf:"bytes,16,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty" db:"date_created"`                 // @gotags: db:"date_created"
	DateModified     string `protobuf:"bytes,17,opt,name=date_modified,json=dateModified,proto3" json:"date_modified,omitempty" db:"date_modified"`              // @gotags: db:"date_modified"
	PageUlid         string `protobuf:"bytes,18,opt,name=page_ulid,json=pageUlid,proto3" json:"page_ulid,omitempty" db:"page_ulid"`                          // @gotags: db:"page_ulid"
	SiteUlid         string `protobuf:"bytes,19,opt,name=site_ulid,json=siteUlid,proto3" json:"site_ulid,omitempty" db:"site_ulid"`                          // @gotags: db:"site_ulid"
	SortPosition     int32  `protobuf:"varint,20,opt,name=sort_position,json=sortPosition,proto3" json:"sort_position,omitempty" db:"sort_position"`             // @gotags: db:"sort_position"
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetBlockUlid() string {
	if x != nil {
		return x.BlockUlid
	}
	return ""
}

func (x *Block) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Block) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Block) GetContentOneHtml() string {
	if x != nil {
		return x.ContentOneHtml
	}
	return ""
}

func (x *Block) GetContentTwoHtml() string {
	if x != nil {
		return x.ContentTwoHtml
	}
	return ""
}

func (x *Block) GetContentThreeHtml() string {
	if x != nil {
		return x.ContentThreeHtml
	}
	return ""
}

func (x *Block) GetContentFourHtml() string {
	if x != nil {
		return x.ContentFourHtml
	}
	return ""
}

func (x *Block) GetImageOneUlid() string {
	if x != nil {
		return x.ImageOneUlid
	}
	return ""
}

func (x *Block) GetImageTwoUlid() string {
	if x != nil {
		return x.ImageTwoUlid
	}
	return ""
}

func (x *Block) GetImageThreeUlid() string {
	if x != nil {
		return x.ImageThreeUlid
	}
	return ""
}

func (x *Block) GetImageFourUlid() string {
	if x != nil {
		return x.ImageFourUlid
	}
	return ""
}

func (x *Block) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *Block) GetDateModified() string {
	if x != nil {
		return x.DateModified
	}
	return ""
}

func (x *Block) GetPageUlid() string {
	if x != nil {
		return x.PageUlid
	}
	return ""
}

func (x *Block) GetSiteUlid() string {
	if x != nil {
		return x.SiteUlid
	}
	return ""
}

func (x *Block) GetSortPosition() int32 {
	if x != nil {
		return x.SortPosition
	}
	return 0
}

type BlockWithImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockUlid        string       `protobuf:"bytes,1,opt,name=block_ulid,json=blockUlid,proto3" json:"block_ulid,omitempty"`
	Title            string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Kind             string       `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	ContentOneHtml   string       `protobuf:"bytes,4,opt,name=content_one_html,json=contentOneHtml,proto3" json:"contentOneHtml,omitempty"`
	ContentTwoHtml   string       `protobuf:"bytes,5,opt,name=content_two_html,json=contentTwoHtml,proto3" json:"contentTwoHtml,omitempty"`
	ContentThreeHtml string       `protobuf:"bytes,6,opt,name=content_three_html,json=contentThreeHtml,proto3" json:"contentThreeHtml,omitempty"`
	ContentFourHtml  string       `protobuf:"bytes,7,opt,name=content_four_html,json=contentFourHtml,proto3" json:"contentFourHtml,omitempty"`
	ImageOne         *image.Image `protobuf:"bytes,9,opt,name=image_one,json=imageOne,proto3" json:"image_one,omitempty"`
	ImageTwo         *image.Image `protobuf:"bytes,11,opt,name=image_two,json=imageTwo,proto3" json:"image_two,omitempty"`
	ImageThree       *image.Image `protobuf:"bytes,13,opt,name=image_three,json=imageThree,proto3" json:"image_three,omitempty"`
	ImageFour        *image.Image `protobuf:"bytes,15,opt,name=image_four,json=imageFour,proto3" json:"image_four,omitempty"`
	DateCreated      string       `protobuf:"bytes,16,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateModified     string       `protobuf:"bytes,17,opt,name=date_modified,json=dateModified,proto3" json:"date_modified,omitempty"`
	PageUlid         string       `protobuf:"bytes,18,opt,name=page_ulid,json=pageUlid,proto3" json:"page_ulid,omitempty"`
	SiteUlid         string       `protobuf:"bytes,19,opt,name=site_ulid,json=siteUlid,proto3" json:"site_ulid,omitempty"`
	SortPosition     int32        `protobuf:"varint,20,opt,name=sort_position,json=sortPosition,proto3" json:"sort_position,omitempty"`
}

func (x *BlockWithImage) Reset() {
	*x = BlockWithImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockWithImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockWithImage) ProtoMessage() {}

func (x *BlockWithImage) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockWithImage.ProtoReflect.Descriptor instead.
func (*BlockWithImage) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1}
}

func (x *BlockWithImage) GetBlockUlid() string {
	if x != nil {
		return x.BlockUlid
	}
	return ""
}

func (x *BlockWithImage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlockWithImage) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BlockWithImage) GetContentOneHtml() string {
	if x != nil {
		return x.ContentOneHtml
	}
	return ""
}

func (x *BlockWithImage) GetContentTwoHtml() string {
	if x != nil {
		return x.ContentTwoHtml
	}
	return ""
}

func (x *BlockWithImage) GetContentThreeHtml() string {
	if x != nil {
		return x.ContentThreeHtml
	}
	return ""
}

func (x *BlockWithImage) GetContentFourHtml() string {
	if x != nil {
		return x.ContentFourHtml
	}
	return ""
}

func (x *BlockWithImage) GetImageOne() *image.Image {
	if x != nil {
		return x.ImageOne
	}
	return nil
}

func (x *BlockWithImage) GetImageTwo() *image.Image {
	if x != nil {
		return x.ImageTwo
	}
	return nil
}

func (x *BlockWithImage) GetImageThree() *image.Image {
	if x != nil {
		return x.ImageThree
	}
	return nil
}

func (x *BlockWithImage) GetImageFour() *image.Image {
	if x != nil {
		return x.ImageFour
	}
	return nil
}

func (x *BlockWithImage) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *BlockWithImage) GetDateModified() string {
	if x != nil {
		return x.DateModified
	}
	return ""
}

func (x *BlockWithImage) GetPageUlid() string {
	if x != nil {
		return x.PageUlid
	}
	return ""
}

func (x *BlockWithImage) GetSiteUlid() string {
	if x != nil {
		return x.SiteUlid
	}
	return ""
}

func (x *BlockWithImage) GetSortPosition() int32 {
	if x != nil {
		return x.SortPosition
	}
	return 0
}

type Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *Blocks) Reset() {
	*x = Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blocks) ProtoMessage() {}

func (x *Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blocks.ProtoReflect.Descriptor instead.
func (*Blocks) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{2}
}

func (x *Blocks) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type BlocksWithImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*BlockWithImage `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *BlocksWithImages) Reset() {
	*x = BlocksWithImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlocksWithImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlocksWithImages) ProtoMessage() {}

func (x *BlocksWithImages) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlocksWithImages.ProtoReflect.Descriptor instead.
func (*BlocksWithImages) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{3}
}

func (x *BlocksWithImages) GetBlocks() []*BlockWithImage {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type BlocksPaged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PagedInfo *base.PagedInfo `protobuf:"bytes,1,opt,name=pagedInfo,proto3" json:"pagedInfo,omitempty"`
	Records   []*Block        `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *BlocksPaged) Reset() {
	*x = BlocksPaged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlocksPaged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlocksPaged) ProtoMessage() {}

func (x *BlocksPaged) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlocksPaged.ProtoReflect.Descriptor instead.
func (*BlocksPaged) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4}
}

func (x *BlocksPaged) GetPagedInfo() *base.PagedInfo {
	if x != nil {
		return x.PagedInfo
	}
	return nil
}

func (x *BlocksPaged) GetRecords() []*Block {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_block_proto protoreflect.FileDescriptor

var file_block_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3,
	0x04, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x77,
	0x6f, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x48,
	0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x6f, 0x75, 0x72, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x75, 0x6c, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x6e,
	0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x77, 0x6f, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66,
	0x6f, 0x75, 0x72, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x75, 0x72, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6c,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x55, 0x6c,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe4, 0x04, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f,
	0x68, 0x74, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x77, 0x6f,
	0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x48, 0x74,
	0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f,
	0x75, 0x72, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x54, 0x77, 0x6f, 0x12, 0x2e, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6f, 0x75, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x75, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x55, 0x6c, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x06, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x42, 0x0a, 0x10,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x22, 0x67, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0xc8, 0x01, 0x0a, 0x08, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x50, 0x43, 0x12, 0x2a, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x1a, 0x0d, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x29, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x0d, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x0d,
	0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x0a,
	0x0b, 0x50, 0x61, 0x67, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x11, 0x2e, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x13, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x1a, 0x0f, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x72, 0x64, 0x79, 0x6e, 0x7a, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData = file_block_proto_rawDesc
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_proto_rawDescData)
	})
	return file_block_proto_rawDescData
}

var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_block_proto_goTypes = []interface{}{
	(*Block)(nil),            // 0: scribe.Block
	(*BlockWithImage)(nil),   // 1: scribe.BlockWithImage
	(*Blocks)(nil),           // 2: scribe.Blocks
	(*BlocksWithImages)(nil), // 3: scribe.BlocksWithImages
	(*BlocksPaged)(nil),      // 4: scribe.BlocksPaged
	(*image.Image)(nil),      // 5: scribe.Image
	(*base.PagedInfo)(nil),   // 6: scribe.PagedInfo
	(*base.Lookup)(nil),      // 7: scribe.Lookup
	(*base.Deleted)(nil),     // 8: scribe.Deleted
}
var file_block_proto_depIdxs = []int32{
	5,  // 0: scribe.BlockWithImage.image_one:type_name -> scribe.Image
	5,  // 1: scribe.BlockWithImage.image_two:type_name -> scribe.Image
	5,  // 2: scribe.BlockWithImage.image_three:type_name -> scribe.Image
	5,  // 3: scribe.BlockWithImage.image_four:type_name -> scribe.Image
	0,  // 4: scribe.Blocks.blocks:type_name -> scribe.Block
	1,  // 5: scribe.BlocksWithImages.blocks:type_name -> scribe.BlockWithImage
	6,  // 6: scribe.BlocksPaged.pagedInfo:type_name -> scribe.PagedInfo
	0,  // 7: scribe.BlocksPaged.records:type_name -> scribe.Block
	7,  // 8: scribe.BlockRPC.LoadBlock:input_type -> scribe.Lookup
	0,  // 9: scribe.BlockRPC.SaveBlock:input_type -> scribe.Block
	6,  // 10: scribe.BlockRPC.PagedBlocks:input_type -> scribe.PagedInfo
	7,  // 11: scribe.BlockRPC.DeleteBlock:input_type -> scribe.Lookup
	0,  // 12: scribe.BlockRPC.LoadBlock:output_type -> scribe.Block
	0,  // 13: scribe.BlockRPC.SaveBlock:output_type -> scribe.Block
	4,  // 14: scribe.BlockRPC.PagedBlocks:output_type -> scribe.BlocksPaged
	8,  // 15: scribe.BlockRPC.DeleteBlock:output_type -> scribe.Deleted
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockWithImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlocksWithImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlocksPaged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_rawDesc = nil
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}
